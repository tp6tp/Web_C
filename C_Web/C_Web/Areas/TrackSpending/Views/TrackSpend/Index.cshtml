@{
    List<List<List<string>>> tracks = ViewBag.data;
}

<style>

</style>

<div class="container" >
    <div class="row">
        <h2 style="font-weight:bold;">
            記帳本
        </h2>     
        <div id="tab-title" style="display: flex; margin-left: 60%;">
            <input id="searchmonth" type="month" style="margin-right:20%" value="@ViewBag.nowM" />
            <i class="bi bi-pie-chart-fill" style="font-size:2rem; margin-right:20%"><a href="#CHART1"></a></i>
            <i class="bi bi-pie-chart" style="font-size:2rem; margin-right:20%"><a href="#CHART2"></a></i>
            <i class="bi bi-bar-chart-steps" style="font-size:2rem;"><a href="#CHART3"></a></i>
        </div>
    </div>
    <hr />
    <div style="display:block">
        <span id="totalexpenses" style="font-size:larger; color:#F0B524 ; font-weight:bold; text-align:left;"></span>
        <span id="totalincome" style="font-size:larger; color: #12ADCB; font-weight:bold; float:right;"></span>
    </div>
    <div class="col-xl-12 col-md-12 col-sm-12" style="display:flex; justify-content:center; text-align:center">
        <div id="CHART1" class="col-md-5 tab-inner" style="margin: 0 auto">
            <canvas id="spendChart1">
            </canvas>
            <hr />
        </div>
        <div id="CHART2" class="col-md-5 tab-inner" style="margin: 0 auto">
            <canvas id="spendChart2">
            </canvas>
            <hr />
        </div>
        <div id="CHART3" class="col-md-7 tab-inner" style="margin: 0 auto">
            <canvas id="spendChart3">
            </canvas>
            <hr />
        </div>
    </div>
    


    
    <div class="col-xl-12 col-md-12 col-sm-12" style="margin-bottom:1%; display:flex">
        <div class="col-md-6">
            <button id="createTrack" class="btn btn-success form-control">新 增 明 細</button>
        </div>
        <div class="col-md-6">
            <a href="@Url.Action("ViewClassIcon","TrackSpend")" class="btn btn-success form-control">分 類 管 理</a>
        </div>
    </div>

    
    <div id="trackstable" class="display:block" style="height: 400px; width: auto; overflow-y: scroll; ">
        <div class="display: block" style="width:auto">

            @for (var x = 0; x < tracks.Count(); x++)
            {
                List<List<string>> conbination = tracks[x];
                <div class="displa: block" style="width:500px; margin: 0 auto; margin-top: 1%; border: solid; border-radius: 10px">
                    @for (var y = 0; y < conbination.Count(); y++)
                    {
                        List<string> strList = conbination[y];
                        if (strList.Count() == 1)
                        {
                            <h2 style="text-align:center">@strList[0]</h2>
                            <hr style="border:solid" />
                        }
                        else{
                            <ul id="track_@strList[5]" style="list-style: none;">
                                <li data-classid="@strList[6]" style="display: flex; justify-content: space-between;">
                                    <div style="display: flex; align-items: center;">
                                        <i class="@strList[0] fa-2x" style="color: @strList[1]; text-align:left">
                                            &thinsp;
                                        </i>
                                        <font class="" style="font-size:larger; font-weight:bold; ">@strList[2]</font>
                                    </div>
                                    @{
                                        strList[3] = strList[4] == "支出" && Convert.ToInt32(strList[3]) != 0 ? "-" + strList[3] : " "+strList[3];
                                    }
                                    <div style="display: flex; align-items: center; margin-right: 3%">
                                        <span style="white-space:nowrap; "><i class="fas fa-coins fa-lg" style="margin-right: 10%"></i><font class="amount" style="font-size:medium; font-weight:bold;">@strList[3]</font></span>
                                    </div>
                                </li>
                                <hr />
                            </ul>
                        }
                    } 
                </div>
            }
        </div>
    </div>
</div>

<!--Create Modal新增-->
<div class="modal fade" id="Createmodal" role="dialog" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg modal-dialog-scrollable">
        <div class="modal-content">

        </div>
    </div>
</div>
<!--Edit Modal修改-->
<div class="modal fade" id="Editmodal" role="dialog" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg modal-dialog-scrollable">
        <div class="modal-content">

        </div>
    </div>
</div>
   

<script>
    $("#createTrack").on("click", function () { 
        $("#Createmodal .modal-content").load("@Url.Action("CreateModal","TrackSpend")");
        $("#Createmodal").modal("show");
    });
    $(function () {
        $("#searchmonth").on("change", function (e) {
            // console.log($("#searchmonth").val()); 
            ch1($("#searchmonth").val());
            ch2($("#searchmonth").val());
            ch3($("#searchmonth").val());
            $("#trackstable").load("/TrackSpending/TrackSpend?nowdate=" + $("#searchmonth").val() + " #trackstable>*", "", 
            function () {
                tracktotal();
                trackclick();
            });
        })
    })

    //#region 圖表_切換
    $(function () {
        var $li = $("#tab-title i")  //jq 取id tan-title的對象 底下的i標籤
        $($li.eq(0).addClass("active").find("a").attr("href")).siblings(".tab-inner").hide("fast"); // 預設將取得的對象底下第一位[0]添加active的class屬性後, 找到其餘所有a標籤href對象內容隱藏

        $li.click(function () {  //監聽click事件 變更 添加or移除active 實現切換
            $($(this).find("a").attr("href")).show().siblings(".tab-inner").hide();
            $(this).addClass("active").siblings(".active").removeClass("active");
        });
    })
    //#endregion

    //#region 收入支出 結算
    $(function () {
        tracktotal();
    })
    function tracktotal() {
        let IN = 0;
        let EX = 0;
        let str = $(".amount");
        str.each(function (e) {
            // console.log(parseInt(str[e].innerHTML));
            let num = parseInt(str[e].innerHTML);
            if (num >= 0)
                IN += num;
            else
                EX += num;
        })
        $("#totalexpenses").text("支出: " + EX);
        $("#totalincome").text("收入: " + IN);
    }
    //#endregion

    //#region chart
    $(function(){
        ch1();
        ch2();
        ch3();
    })
    //#region chart1
    function ch1(date) {
        $.post("@Url.Action("ViewChart1","TrackSpend")", { nowdate: date }, function (e) {
            // console.log([e.expenses[0], e.income[0]]);
            let preChart1 = Chart.getChart("spendChart1");
            if (preChart1)
                preChart1.destroy();
            var ctx = document.getElementById("spendChart1").getContext('2d');
            var spendChart = new Chart(ctx, {
                type: "doughnut",
                data: {
                    labels: ["支出", "收入",],
                    datasets: [{
                        label: "金額: ",
                        data: [e.expenses[0], e.income[0]],
                        backgroundColor: [
                            "#F0B524",
                            "#12ADCB",
                        ],
                        borderColor: "#000000",
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            ticks: {
                                beginAtZero: true
                            }
                        }
                    }
                }
            })
        })
    }
    //#endregion

    //#region chart2
    function ch2(date) {
        $.post("@Url.Action("ViewChart2","TrackSpend")", { nowdate: date }, function (e) {
            // console.log(e.amount);
            // console.log(e.note);
            // console.log(e.color);
            let preChart2 = Chart.getChart("spendChart2");
            if (preChart2)
                preChart2.destroy();
            var ct = document.getElementById("spendChart2").getContext('2d');
            var spendChart2 = new Chart(ct, {
                type: "doughnut",
                data: {
                    labels: e.note,
                    datasets: [{
                        label: "金額: ",
                        data: e.amount,
                        backgroundColor: e.color,
                        borderColor: "#000000",
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            ticks: {
                                beginAtZero: true
                            }
                        }
                    }
                }
            })
        })
    }
    //#endregion

    //#region chart3
    function ch3(date) {
        $.post("@Url.Action("ViewChart3","TrackSpend")", { nowdate: date }, function (e) {
            // console.log(e.date);
            // console.log(e.expenses);
            // console.log(e.income);
            // console.log(e.cashsurplus);
            let preChart3 = Chart.getChart("spendChart3");
            if (preChart3)
                preChart3.destroy();
            var ct = document.getElementById("spendChart3").getContext('2d');
            var spendChart2 = new Chart(ct, {
                type: "bar",
                data: {
                    labels: e.date,
                    datasets: [{
                        label: "收入: ",
                        data: e.income,
                        backgroundColor: "#12ADCB",
                        borderColor: "#12ADCB",
                        showLine: true
                    },
                    {
                        label: "支出: ",
                        data: e.expenses,
                        backgroundColor: "#F0B524",
                        borderColor: "#F0B524",
                        showLine: true
                    },
                    {
                        label: "結餘: ",
                        data: e.cashsurplus,
                        backgroundColor: "#F98282",
                        borderColor: "#F98282",
                        showLine: true
                    }
                    ]
                },
                options: {
                    indexAxis: "y",
                },
                scales: {
                    y: {
                        ticks: {
                            beginAtZero: true
                        },
                        position: "top"
                    }
                }
            })
        })
    }
    //#endregion

    //#endregion

    //#region edit
    $(function () {
        $("[id^=track_]").on("click", function () {
            let ID = $(this)[0].id.split("_")[1];
            console.log(ID);
            $("#Editmodal .modal-content").load("@Url.Action("EditModal","TrackSpend")", { TrackSpendId: ID });
            $("#Editmodal").modal("show");
        })
    })
    function trackclick(){
        $("[id^=track_]").on("click", function () {
            let ID = $(this)[0].id.split("_")[1];
            console.log(ID);
            $("#Editmodal .modal-content").load("@Url.Action("EditModal","TrackSpend")", { TrackSpendId: ID });
            $("#Editmodal").modal("show");
        })
    }
    //#endregion
</script>